@using Microsoft.AspNetCore.Identity
@using MVC.Utilities;

@model VehicleMakeViewModel

@{
    ViewData["Title"] = "Vehicle Make";
    var errorMessage = TempData[ControllerConstants.ErrorMessageData] as string;
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <script>
        alert('@errorMessage');
    </script>
}

<h1>Vehicle Make</h1>

@if (User.IsInRole(UserConstants.AdminRole)) 
{
    <p>
        @await Html.PartialAsync("AddVehicleMake", new VehicleMakeDto())
    </p>
}

<form asp-action="Make" method="get">
    <div class="form-actions no-color">
        <p>
            Find: <input type="text" name="SearchString" value="@ViewData[ControllerConstants.CurrentFilterData]" />
            <input type="submit" value="Search" /> |
            <a asp-action="Make">Reset</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Make"
                   asp-route-SearchString="@ViewData[ControllerConstants.CurrentFilterData]"
                asp-route-pageNumber="@Model.PageNumber"
                   asp-route-sortOrder="@ViewData[ControllerConstants.NameSortData]">@Html.DisplayNameFor(model => model.VehicleMakes[0].Name)</a>
            </th>
            <th><a asp-action="Make"
                   asp-route-SearchString="@ViewData[ControllerConstants.CurrentFilterData]"
                asp-route-pageNumber="@Model.PageNumber"
                   asp-route-sortOrder="@ViewData[ControllerConstants.AbrvSortData]">@Html.DisplayNameFor(model => model.VehicleMakes[0].Abrv)</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.VehicleMakes)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Abrv</td>
                @if (User.IsInRole(UserConstants.AdminRole))
                {
                    <td>
                        @Html.ActionLink("Edit", ControllerConstants.ActionNameEditMake, new { id=item.Id }) |
                        @Html.ActionLink("Delete", "DeleteVehicleMake", new { id=item.Id })
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
<div>
    Page @(Model.PageNumber) of @Model.TotalPages
    <ul class="pagination">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-action="Make"
                   asp-route-SearchString="@ViewData[ControllerConstants.CurrentFilterData]"
                   asp-route-pageNumber="@i"
                   asp-route-sortOrder="@ViewData[ControllerConstants.SortData]">@i</a>
            </li>
        }
    </ul>
</div>
