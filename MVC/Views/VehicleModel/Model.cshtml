@model VehicleModelViewModel

@{
    ViewData["Title"] = "Vehicle Model";
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <script>
        alert('@errorMessage');
    </script>
}

<h1>Vehicle Model</h1>

<p>
    @await Html.PartialAsync("AddVehicleModel", new VehicleModelDto(Model.VehicleMakes))
</p>
<form asp-action="Model" method="get">
    <div class="form-actions no-color">
        <p>
            Find: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            Vehicle Make: 
            <select name="SelectedMake">
                <option value="">All Makes</option>
                @foreach (var make in Model.VehicleMakes)
                {
                    <option value="@make.Id">@make.Name</option>
                }
            </select>

            <input type="submit" value="Search" /> |
            <a asp-action="Model">Reset</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th><a asp-action="Model" 
                asp-route-SearchString="@ViewData["CurrentFilter"]"
                asp-route-SelectedMake="@ViewData["SelectedMake"]"
                asp-route-pageNumber="@Model.PageNumber"
                asp-route-sortOrder="@ViewData["NameSort"]">@Html.DisplayNameFor(model => model.VehicleModels[0].Name)</a></th>
            <th><a asp-action="Model" 
                asp-route-SearchString="@ViewData["CurrentFilter"]"
                   asp-route-SelectedMake="@ViewData["SelectedMake"]"
                asp-route-pageNumber="@Model.PageNumber"
                asp-route-sortOrder="@ViewData["AbrvSort"]">@Html.DisplayNameFor(model => model.VehicleModels[0].Abrv)</a></th>
            <th><a asp-action="Model" 
                asp-route-SearchString="@ViewData["CurrentFilter"]"
                   asp-route-SelectedMake="@ViewData["SelectedMake"]"
                asp-route-pageNumber="@Model.PageNumber"
                asp-route-sortOrder="@ViewData["MakeNameSort"]">@Html.DisplayNameFor(model => model.VehicleModels[0].VehicleMake)</a></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.VehicleModels)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Abrv</td>
                <td>@if (item.VehicleMake != null) { @item.VehicleMake.Abrv}</td>
                <td>
                    @Html.ActionLink("Edit", "EditVehicleModel", new { id=item.Id }) |
                    @Html.ActionLink("Delete", "DeleteVehicleModel", new { id=item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    Page @(Model.PageNumber) of @Model.TotalPages
    <ul class="pagination">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-action="Model"
                   asp-route-SearchString="@ViewData["CurrentFilter"]"
                   asp-route-SelectedMake="@ViewData["SelectedMake"]"
                   asp-route-pageNumber="@i"
                   asp-route-sortOrder="@ViewData["Sort"]">@i</a>
            </li>
        }
    </ul>
</div>